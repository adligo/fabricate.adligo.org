<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
	targetNamespace="http://www.adligo.org/fabricate/xml/io_v1/fabricate_v1_0.xsd" 
	xmlns:fns="http://www.adligo.org/fabricate/xml/io_v1/fabricate_v1_0.xsd" 
	elementFormDefault="qualified"
	xmlns:lns="http://www.adligo.org/fabricate/xml/io_v1/library_v1_0.xsd"
	xmlns:pns="http://www.adligo.org/fabricate/xml/io_v1/project_v1_0.xsd"
	xmlns:cns="http://www.adligo.org/fabricate/xml/io_v1/common_v1_0.xsd" >
	
	<!-- 
	Comments on name space;
	The last part of the name space here should match up with the file names for the schemas (.xsd) files.
	Also the parent name space should match for all schemas in this directory, since they reference
	each other in a flat way (all files in a single directory). The idea here being that on the actual web 
	server these urls would be as close to they are in the .jar file, and that 
	http://www.adligo.org/fabricate/xml/io_v1/library_v1_0
	would serve up library_v1_0.xsd.
	In addition new versions could be mixed in i.e. library_v1_1.xsd, once v2_0 is started 
	it would have a io_v2/
	 -->
    <import schemaLocation="library_v1_0.xsd" 
		namespace="http://www.adligo.org/fabricate/xml/io_v1/library_v1_0.xsd">
	</import>
	<import schemaLocation="project_v1_0.xsd" 
		namespace="http://www.adligo.org/fabricate/xml/io_v1/project_v1_0.xsd">
	</import>
	<import schemaLocation="common_v1_0.xsd" 
		namespace="http://www.adligo.org/fabricate/xml/io_v1/common_v1_0.xsd">
	</import>
	
    <complexType name="fabricate_type">
    	<sequence>
    		<element name="java" type="fns:java_type" minOccurs="0"
    			maxOccurs="1">
    		</element>
    		<element name="logs" type="fns:log_settings_type"
    			minOccurs="0" maxOccurs="1">
    		</element>
    		<element name="dependencies"
    			type="fns:fabricate_dependencies" minOccurs="0" maxOccurs="1">
    		</element>
            <element name="command" type="cns:command_type" minOccurs="0" maxOccurs="unbounded"></element>
            <choice>
    			<element name="groups" type="fns:project_groups_type"
    				minOccurs="0" maxOccurs="1">
    			</element>
    			<element name="project_group"
    				type="fns:stages_and_projects_type" minOccurs="0"
    				maxOccurs="1">
    			</element>
    		</choice>
    	</sequence>
    </complexType>

    <element name="fabricate" type="fns:fabricate_type"></element>

    <complexType name="project_groups_type">
        <annotation>
        	<documentation></documentation>
        </annotation>
        <sequence>
    		<element name="project_group" type="fns:project_group_type" minOccurs="1" maxOccurs="unbounded"></element>
    	</sequence>
    </complexType>

    <complexType name="git_server_type">
    		<attribute name="user" type="string" use="optional"></attribute>
    		<attribute name="hostname" type="string" use="required"></attribute>
    		<attribute name="path" type="string" use="required">
    			<annotation>
		    		<documentation>
		    			This is the remote path, and must contain a
		    			final slash in the remote servers file syntax
		    			which I think is always /.
		    		</documentation>
		    	</annotation>
    		</attribute>
    </complexType>

    <complexType name="projects_type">
    		<sequence>
    			<element name="scm" type="fns:scm_type" minOccurs="1" maxOccurs="1"></element>
    			<element name="project" type="fns:project_type" minOccurs="1" maxOccurs="unbounded"></element>
    		</sequence>
    	
    </complexType>

	<complexType name="scm_type">
    
    	<choice>
    		<element name="git" type="fns:git_server_type" minOccurs="1"
    			maxOccurs="1">
    		</element>
    	</choice>
    	
    </complexType>
    
    <complexType name="project_type">
    	<attribute name="name" type="string" use="required">
    		<annotation>
				<documentation>
					This is the name of the project in the scm i.e.;
					fabricate.adligo.org
				</documentation>
			</annotation>
    	</attribute>
    	<attribute name="version" type="string" use="optional">
    		<annotation>
				<documentation>
					This is the optional version in the scm (aka tag in git).
				</documentation>
			</annotation>
    	</attribute>
    </complexType>

    <complexType name="fabricate_dependencies">
    	<annotation>
    		<documentation>
    			Fabricate extensions can delivered through a repository
    			download, and added to the fabricate classpath for the
    			main fab. In addition they can be added to the
    			project_group/lib directory.
    		</documentation>
    	</annotation>
    	<sequence>
    		<element name="remote_repository" type="string"
    			minOccurs="1" maxOccurs="unbounded">
    			<annotation>
    				<documentation>
    					The repositories listed with these elements are
    					maven servers used to find a particular
    					artifact. This is just like
    					distributionManagement in the maven document.
    					Fabricate currently only supports the default
    					layout. This is the url to the repository folder
    					ie;
    					http://docs.codehaus.org/display/MAVENUSER/Mirrors+Repositories
    					http://repo1.maven.org/maven2/
    					http://uk.maven.org/maven2/
    					http://mirrors.ibiblio.org/maven2/ only http is
    					available.
    				</documentation>
    			</annotation>
    		</element>
            <element name="library" type="lns:library_reference_type" minOccurs="0" maxOccurs="unbounded">
            	<annotation>
            		<documentation>Note the platform_type is always ignored in this context.</documentation>
            	</annotation></element>
            <element name="dependency" type="lns:dependency_type"
    			minOccurs="0" maxOccurs="unbounded">
    		</element>
    	</sequence>
    	<attribute name="local_repository" type="string">
    		<annotation>
    			<documentation>
    				This is where the local repository downloads are
    				stored, it defaults to ${user.home}/local_repository
    				Also the fab_repo uses a collapsed directory
    				structure, do reduce the number of directories
    				created.
    				local_repository
    				   |-org.apache.maven.plugins
    				   |    |-maven-jar-plugin
    				   |    |     |-3.2.3
    				   |    |     |    |-maven-plugin-api-3.2.3.jar
    				   |    |     |    |-maven-plugin-api-3.2.3.jar.sha1
    			    A regular maven repository would have 4 directories for the group name
    			</documentation>
    		</annotation>
    	</attribute>
    </complexType>

    
    <complexType name="stage_type">
    	<sequence>
    		<element name="params" type="cns:params_type" minOccurs="0" maxOccurs="1"></element>
    		<element name="task" type="cns:task_type" minOccurs="0" maxOccurs="unbounded"></element>
    	</sequence>
    	<attribute name="name" type="string"></attribute>
    	<attribute name="class" type="string">
    		<annotation>
    			<documentation>
    				This is a class in the fabricate classpath which
    				must implement one of;
    				org.adligo.fabricate.common.I_ScmTask
    				org.adligo.fabricate.common.I_ProjectTask
    			</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="optional" type="boolean">
    		<annotation>
    			<documentation>
    				When this is set to true, the task/stage name must
    				be set to true for the stage to execute. This is
    				done so that external users of the build do not need
    				to push to a intelligence4j server.
    			</documentation>
    		</annotation>
    	</attribute>
    </complexType>

    <complexType name="stages_type">
    	<sequence>
    		<element name="stage" type="fns:stage_type" minOccurs="1" maxOccurs="unbounded"></element>
    	</sequence>
    </complexType>

    <complexType name="stages_and_projects_type">
    	<sequence>
    		<element name="stages" type="fns:stages_type" minOccurs="1" maxOccurs="1"></element>
    		<element name="projects" type="fns:projects_type" minOccurs="1" maxOccurs="1"></element>
    	</sequence>
    </complexType>

    <complexType name="java_type">
    	<annotation>
    		<documentation>
    			This provides a limited list of options to pass to the
    			jvm which actually does the fabrication. These options
    			are peers of options listed here
    			http://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html
    		</documentation>
    	</annotation>
    	<attribute name="Xmx" type="string">
    		<annotation>
    			<documentation>Defaults to 64m</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="Xms" type="string">
    		<annotation>
    			<documentation>Defaults to 16m</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="threads" type="int">
    		<annotation>
    			<documentation>
    			This optional attribute allows you to turn down or 
    			off the concurrency feature of fabricate it 
    			defaults to two times Runtime.getRuntime().availableProcessors()
    			</documentation>
    		</annotation>
    	</attribute>
    </complexType>

    <complexType name="log_setting_type">
    	<attribute name="class" type="string"></attribute>
    	<attribute name="setting" type="boolean"></attribute>
    </complexType>

    <complexType name="log_settings_type">
    	<sequence>
    		<element name="log" type="fns:log_setting_type" minOccurs="0" maxOccurs="unbounded"></element>
    	</sequence>
    </complexType>

    

    <complexType name="project_group_type">
        <annotation>
        	<documentation>
Project groups are projects with fabricate.xml files, 
fabricate will be able to delegate to other fabrications.</documentation>
        </annotation>
        <sequence>
    		<element name="scm" type="fns:scm_type" minOccurs="1"
    			maxOccurs="1">
    		</element>
    		<element name="project" type="fns:project_type" minOccurs="1" maxOccurs="1"></element>
    	</sequence>
    </complexType>
</schema>