<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
	targetNamespace="http://www.adligo.org/fabricate/xml/io_v1/library_v1_0.xsd" 
	xmlns:tns="http://www.adligo.org/fabricate/xml/io_v1/library_v1_0.xsd" 
	elementFormDefault="qualified">

    <complexType name="library_type">
    	<sequence>
    		<element name="dependencies" type="tns:dependencies_type"></element>
    	</sequence>
    </complexType>

    <element name="library" type="tns:library_type"></element>
    
    <complexType name="project_dependency_type">
    	<annotation>
    		<documentation>
    			This is a name of a project directory, the actual
    			artifact ie (jar, war exc) is determined based on the
    			context of the task running on the project for a
    			particular stage. In other words there could be three
    			jar files which are produced for a project (a gwt jar,
    			jse jar and jme jar) so the artifact for a jme_jar task
    			would be the jme jar.
    		</documentation>
    	</annotation>
    	<simpleContent>
    		<extension base="string">
    			<attribute name="platform" type="tns:platform_type" use="optional"></attribute>
    		</extension>
    	</simpleContent>
    </complexType>

    <complexType name="dependency_type">
    	<sequence>
    		<element name="ide" type="tns:ide_type" minOccurs="0" maxOccurs="unbounded"></element>
    	</sequence>
    	<attribute name="group" type="string" use="required">
    		<annotation>
    			<documentation>This is the maven group.</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="artifact" type="string" use="required">
    		<annotation>
    			<documentation>
    				This is the maven artifact.
    			</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="version" type="string" use="required">
    		<annotation>
    			<documentation>
    				This is the maven version.
    			</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="type" type="string" use="optional">
    		<annotation>
    			<documentation>This defaults to jar.</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="fileName" type="string" use="optional">
    		<annotation>
    			<documentation>
    				This optional attribute allows you to specify any
    				kind of file name in the remote maven repository, so
    				you can have underscores or files with out version
    				information in the filename exc.
    			</documentation>
    		</annotation>
    	</attribute>
    	<attribute name="platform" type="tns:platform_type"
    		use="optional">
    		<annotation>
    			<documentation></documentation>
    		</annotation>
    	</attribute>
    	<attribute name="extract" type="boolean" use="optional">
    		<annotation>
    			<documentation>
    				The default value is false, this option tells
    				fabricate to extract (unzip for jar files) the jar
    				file into a extract folder with a name matching the
    				jar name (with out .jar).
    			</documentation>
    		</annotation>
    	</attribute>
    </complexType>

    <complexType name="dependencies_type">
    	<sequence>
    		<element name="library" type="tns:library_reference_type" minOccurs="0" maxOccurs="unbounded"></element>
    		<element name="dependency" type="tns:dependency_type" minOccurs="0" maxOccurs="unbounded"></element>
    		<element name="project" type="tns:project_dependency_type" minOccurs="0" maxOccurs="unbounded"></element>
    	</sequence>
    </complexType>


    <simpleType name="platform_type">
        <annotation>
        	<documentation>
This is a comma delimited list of platforms which require this dependency, 
the default value is ALL, common platforms are JSE, JME and GWT.</documentation>
        </annotation>
        <restriction base="string"></restriction>
    </simpleType>


    <complexType name="library_reference_type">
    	<simpleContent>
    		<extension base="string">
    			<attribute name="platform" type="tns:platform_type"
    				use="optional">
    			</attribute>
    		</extension>
    	</simpleContent>
    </complexType>

    <complexType name="ide_argument_type">
    	<annotation>
    		<documentation>
    			This is a way to convert the dependency to a IDE (aka
    			the programming program), like Eclipse, NetBeans and
    			others.
    		</documentation>
    	</annotation>
    	<sequence>
    		<element name="arg" type="tns:ide_argument_type" minOccurs="0" maxOccurs="unbounded"></element>
    	</sequence>
    	<attribute name="key" type="string" use="required"></attribute>
    	<attribute name="value" type="string" use="required"></attribute>
    </complexType>

    <complexType name="ide_type">
    	<annotation>
    		<documentation>
    			The name like Eclipse, NetBeans.
    		</documentation>
    	</annotation>
    	<sequence>
    		<element name="arg" type="tns:ide_argument_type" minOccurs="0" maxOccurs="unbounded"></element>
    	</sequence>
    	<attribute name="name" type="string"></attribute>
    </complexType>
</schema>